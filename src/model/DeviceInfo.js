/**
 * CityPay POS API
 * CityPay Point of Sale API for payment with card present devices including EMV readers and contactless POS readers.  The API is available from https://github.com/citypay/citypay-pos-api  The API makes it simple to add EMV and contactless card acceptance to iOS, Android, Tablet and desktop applicaitons using a HTTPS protocol. It segregates the complexity of payment processing from the sales environment and eliminates any necessity for the target system to handle card data. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@citypay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The DeviceInfo model module.
* @module model/DeviceInfo
* @version 1.0.0
*/
export default class DeviceInfo {
    /**
    * Constructs a new <code>DeviceInfo</code>.
    * @alias module:model/DeviceInfo
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>DeviceInfo</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/DeviceInfo} obj Optional instance to populate.
    * @return {module:model/DeviceInfo} The populated <code>DeviceInfo</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceInfo();

            
            
            

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serialno')) {
                obj['serialno'] = ApiClient.convertToType(data['serialno'], 'String');
            }
            if (data.hasOwnProperty('portable')) {
                obj['portable'] = ApiClient.convertToType(data['portable'], 'Boolean');
            }
            if (data.hasOwnProperty('busy')) {
                obj['busy'] = ApiClient.convertToType(data['busy'], 'Boolean');
            }
            if (data.hasOwnProperty('battery_charging')) {
                obj['battery_charging'] = ApiClient.convertToType(data['battery_charging'], 'Boolean');
            }
            if (data.hasOwnProperty('battery_percentage')) {
                obj['battery_percentage'] = ApiClient.convertToType(data['battery_percentage'], 'Number');
            }
            if (data.hasOwnProperty('printer')) {
                obj['printer'] = ApiClient.convertToType(data['printer'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * The name of the device
    * @member {String} name
    */
    name = undefined;
    /**
    * The serial number of the device
    * @member {String} serialno
    */
    serialno = undefined;
    /**
    * Whether the device is portable
    * @member {Boolean} portable
    */
    portable = undefined;
    /**
    * Whether the device is busy or available for a transaction
    * @member {Boolean} busy
    */
    busy = undefined;
    /**
    * Whether the device is currently charging
    * @member {Boolean} battery_charging
    */
    battery_charging = undefined;
    /**
    * A percentage value of the battery
    * @member {Number} battery_percentage
    */
    battery_percentage = undefined;
    /**
    * Whether the device has a printer
    * @member {Boolean} printer
    */
    printer = undefined;








}


