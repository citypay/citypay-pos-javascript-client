/**
 * CityPay POS API
 * CityPay Point of Sale API for payment with card present devices including EMV readers and contactless POS readers.  The API is available from https://github.com/citypay/citypay-pos-api  The API makes it simple to add EMV and contactless card acceptance to iOS, Android, Tablet and desktop applicaitons using a HTTPS protocol. It segregates the complexity of payment processing from the sales environment and eliminates any necessity for the target system to handle card data. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@citypay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The TransactionProgress model module.
* @module model/TransactionProgress
* @version 1.0.0
*/
export default class TransactionProgress {
    /**
    * Constructs a new <code>TransactionProgress</code>.
    * @alias module:model/TransactionProgress
    * @class
    * @param identifier {String} The identifier used to instigate the transaction
    */

    constructor(identifier) {
        

        
        

        this['identifier'] = identifier;

        
    }

    /**
    * Constructs a <code>TransactionProgress</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/TransactionProgress} obj Optional instance to populate.
    * @return {module:model/TransactionProgress} The populated <code>TransactionProgress</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionProgress();

            
            
            

            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
        }
        return obj;
    }

    /**
    * The identifier used to instigate the transaction
    * @member {String} identifier
    */
    identifier = undefined;








}


